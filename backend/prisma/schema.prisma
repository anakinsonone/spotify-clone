generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  user_id       Int         @id @default(autoincrement())
  name          String      @db.VarChar(50)
  email         String      @unique @db.VarChar(50)
  password      String      @db.VarChar(100)
  date_of_birth DateTime?   @db.Date
  profile_image String?     @db.VarChar(255)
  followers     followers[]
  likes         likes[]
  playlists     playlists[]
}

model albums {
  album_id     Int       @id @default(autoincrement())
  artist_id    Int?
  name         String    @db.VarChar(50)
  release_date DateTime? @db.Date
  image        String?   @db.VarChar(255)
  artists      artists?  @relation(fields: [artist_id], references: [artist_id], onDelete: NoAction, onUpdate: NoAction)
  songs        songs[]
}

model artists {
  artist_id Int         @id @default(autoincrement())
  name      String      @db.VarChar(50)
  genre     String?     @db.VarChar(50)
  image     String?     @db.VarChar(255)
  albums    albums[]
  followers followers[]
}

model followers {
  user_id   Int
  artist_id Int
  artists   artists @relation(fields: [artist_id], references: [artist_id], onDelete: NoAction, onUpdate: NoAction)
  users     users   @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([user_id, artist_id])
}

model likes {
  user_id        Int
  song_id        Int
  like_date_time DateTime? @db.Timestamp(6)
  songs          songs     @relation(fields: [song_id], references: [song_id], onDelete: NoAction, onUpdate: NoAction)
  users          users     @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([user_id, song_id])
}

model playlist_songs {
  playlist_id Int
  song_id     Int
  Order       Int?
  playlists   playlists @relation(fields: [playlist_id], references: [playlist_id], onDelete: NoAction, onUpdate: NoAction)
  songs       songs     @relation(fields: [song_id], references: [song_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([playlist_id, song_id])
}

model playlists {
  playlist_id    Int              @id @default(autoincrement())
  user_id        Int?
  name           String           @db.VarChar(50)
  image          String?          @db.VarChar(255)
  playlist_songs playlist_songs[]
  users          users?           @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

model songs {
  song_id        Int              @id @default(autoincrement())
  album_id       Int?
  name           String           @db.VarChar(50)
  duration       Int
  path           String?          @db.VarChar(255)
  likes          likes[]
  playlist_songs playlist_songs[]
  albums         albums?          @relation(fields: [album_id], references: [album_id], onDelete: NoAction, onUpdate: NoAction)
}
